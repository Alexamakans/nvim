.PHONY: docs install
README := README.md

# Collect directories named nvim-*/ (strip trailing / and sort for stable order)
PROFILES := $(sort $(patsubst %/,%,$(wildcard nvim-*/)))

docs:
	@{ \
	  echo '# Neovim Profiles'; \
	  echo; \
	  echo 'This README is generated by `make docs`. It lists the detected profiles at generation time.'; \
	  echo; \
	  echo '## Detected profiles'; \
	  echo; \
	  echo '- `nvim` (base)'; \
	  for p in $(PROFILES); do echo "- \`$${p}\`"; done; \
	  echo; \
	  echo '## Setup (one-time)'; \
	  echo; \
	  echo '```sh'; \
	  echo '# From repository root.'; \
	  echo; \
	  echo '# Link base + profiles'; \
	  echo "ln -sT \"\$$PWD/nvim\" \"\$${XDG_CONFIG_HOME:-\$$HOME/.config}/$${p}\""; \
	  for p in $(PROFILES); do \
	    echo "ln -sT \"\$$PWD/$${p}\" \"\$${XDG_CONFIG_HOME:-\$$HOME/.config}/$${p}\""; \
	  done; \
	  echo '```'; \
	  echo; \
	  echo '## Launch'; \
	  echo; \
	  echo '```sh'; \
	  echo '# Launching a profile.'; \
	  echo; \
	  echo 'nvim --clean      # no modifications'; \
	  echo 'nvim              # base profile'; \
	  for p in $(PROFILES); do \
	    echo "NVIM_APPNAME=$${p} nvim"; \
	  done; \
	  echo '```'; \
	  echo; \
	  echo 'or use the provided `./profile-selector-functions.sh` (docs pending)'; \
	  echo; \
	  echo '## Regenerate this file'; \
	  echo; \
	  echo '```sh'; \
	  echo 'make docs'; \
	  echo '```'; \
	} > $(README); \
	echo 'Generated docs';

install:
	@if [ ! -e "$${XDG_CONFIG_HOME:-$$HOME/.config}/nvim" ]; then \
	  ln -sT "$(CURDIR)/nvim" "$${XDG_CONFIG_HOME:-$$HOME/.config}/nvim"; \
	  echo "Created symlink '$(CURDIR)/nvim' -> '$${XDG_CONFIG_HOME:-$$HOME/.config}/nvim'"; \
	fi; \
	for p in $(PROFILES); do \
	  src="$(CURDIR)/$${p}" \
	  dst="$${XDG_CONFIG_HOME:-$$HOME/.config}/$${p}"; \
	  if [ ! -e "$$dst" ]; then \
	    ln -sT "$$src" "$$dst"; \
	    echo "Created symlink '$$src' -> '$$dst'"; \
	  fi; \
	done;
